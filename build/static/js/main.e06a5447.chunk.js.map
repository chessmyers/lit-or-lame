{"version":3,"sources":["constants/routes.js","components/Navigation.js","components/Firebase/Context.js","components/Firebase/Firebase.js","components/Firebase/index.js","components/Post.js","components/Landing.js","components/PasswordForget.js","components/SignIn.js","components/SignUp.js","components/PasswordChange.js","components/Session/withAuthorization.js","components/Account.js","components/Admin.js","components/SignOut.js","components/Footer.js","components/NewPost.js","components/Lost.js","App.js","serviceWorker.js","index.js"],"names":["LANDING","Navigation","props","react_default","a","createElement","className","react_router_dom","to","ROUTES","onClick","changeCat","FirebaseContext","React","createContext","withFirebase","Component","Consumer","firebase","Object","assign","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","collection","doc","users","userID","getCurrentUsername","get","loadPosts","category","where","orderBy","loadMyPosts","newPost","textBody","fileUrl","add","text","time","app","firestore","FieldValue","serverTimestamp","poster","yes","no","image","likePost","post","yesOrNo","_this$db$collection$d","update","defineProperty","increment","arrayUnion","loadComments","makeNewComment","getCommentPoster","uploadPostImg","file","storage","ref","child","concat","name","put","getUploadURL","getDownloadURL","currentTime","initializeApp","Post","possibleConstructorReturn","getPrototypeOf","call","state","comments","showComments","showVotesBar","yesPercent","noPercent","toggleComments","bind","assertThisInitialized","goToSignIn","authUser","voters","indexOf","yesPer","Math","ceil","setState","prevState","_this2","tempComments","id","then","forEach","comment","tempComm","data","push","catch","err","console","log","isYes","_this3","like","yesCount","noCount","res","history","_this4","src","alt","style","width","toString","paddingBottom","type","height","clickPost","flexBasis","textAlign","color","Post_PosterUsername","classN","ago","Post_CommentsBox","postID","toggleComm","reloadComments","difference","moment","toDate","diff","duration","humanize","defaultProps","Date","CommentsBox","_this5","onChange","event","commentText","target","value","onPostComment","preventDefault","_this6","isInvalid","map","key","onSubmit","placeholder","disabled","PosterUsername","username","_this8","u","withRouter","Landing","posts","onLoad","feed","length","components_Post","desc","INITIAL_STATE","error","PasswordForgetFormBase","objectSpread","_this$state","message","textDecoration","margin","role","aria-label","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","_this$state2","SignUp_SignUpLink","PasswordForget_PasswordForgetLink","SignInLink","SignInForm","compose","SignInPage","passwordOne","passwordTwo","SignUpFormBase","set","SignIn_SignInLink","SignUpLink","SignUpForm","SignUpPage","PasswordChangeForm","withAuthorization","condition","WithAuthorization","_React$Component","apply","arguments","inherits","createClass","listener","onAuthStateChanged","AccountPage","myPosts","tempPosts","tempDat","PasswordChange","Account_MyPostList","MyPostList","AdminPage","loading","on","snapshot","val","window","location","reload","FooterAuth","searchBarText","onSearch","htmlFor","cursor","size","autoComplete","SignOut","FooterNonAuth","Footer_FooterAuth","Footer_FooterNonAuth","uploading","fileTooLarge","filePath","submitted","NewPostFormBase","url","makeNewPost","onAddImage","removeImage","files","reader","FileReader","onload","e","result","readAsDataURL","imgUrl","sub","NewPost_Spinner","NewPost_Image","marginTop","imgUpload","onSub","Spinner","Image","maxWidth","NewPostForm","Lost","display","justifyContent","paddingTop","App","changeCategory","components_Navigation","react_router","exact","path","render","components_Landing","component","components_Account","NewPost","LostPage","components_Footer","Boolean","hostname","match","ReactDOM","Context","Provider","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e06a5447.chunk.js","sourcesContent":["export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const NEW_POST = '/newpost';","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport '../styles/Navigation.css';\r\n\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nconst Navigation = (props) => (\r\n    <nav className=\"navBar\">\r\n        <Link to={ROUTES.LANDING}>\r\n            <button className=\"headerButton\" onClick={() => props.changeCat(\"tastyorterrible\")}>\r\n                TastyorTerrible\r\n            </button>\r\n        </Link>\r\n        <Link to={ROUTES.LANDING}>\r\n            <button className=\"headerButton\" onClick={() => props.changeCat(\"flyorfail\")}>\r\n                FlyorFail\r\n            </button>\r\n        </Link>\r\n        <Link to={ROUTES.LANDING}>\r\n            <button className=\"headerButton\" onClick={() => props.changeCat(\"litorlame\")}>\r\n                LitorLame\r\n            </button>\r\n        </Link>\r\n        <Link to={ROUTES.LANDING}>\r\n            <button className=\"headerButton\" onClick={() => props.changeCat(\"funnyorflat\")}>\r\n                FunnyorFlat\r\n            </button>\r\n        </Link>\r\n        <Link to={ROUTES.LANDING}>\r\n            <button className=\"headerButton\" onClick={() => props.changeCat(\"weirdorwonderful\")}>\r\n                WeirdorWonderful\r\n            </button>\r\n        </Link>\r\n    </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n        {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBaSBuT0ldABrBnjbuBz7XN7iM8vawNPQ4\",\r\n    authDomain: \"lit-or-wack.firebaseapp.com\",\r\n    databaseURL: \"https://lit-or-wack.firebaseio.com\",\r\n    projectId: \"lit-or-wack\",\r\n    storageBucket: \"lit-or-wack.appspot.com\",\r\n    messagingSenderId: \"669480599660\",\r\n    appId: \"1:669480599660:web:c0345becf6bea2b7\"\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        app.initializeApp(config);\r\n\r\n        this.auth = app.auth();\r\n        this.db = app.firestore();\r\n        this.storage = app.storage();\r\n    }\r\n\r\n    // Auth API\r\n\r\n    doCreateUserWithEmailAndPassword = (email, password) =>\r\n        this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n    doSignInWithEmailAndPassword = (email, password) =>\r\n        this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n    doSignOut = () => this.auth.signOut();\r\n\r\n    doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\r\n\r\n    doPasswordUpdate = (password) =>\r\n        this.auth().currentUser.updatePassword(password);\r\n\r\n\r\n    // User Api\r\n\r\n    user = (uid) => this.db.collection(\"users\").doc(uid);\r\n\r\n    users = () => this.db.collection(\"users\");\r\n\r\n    userID = () => this.auth.currentUser.uid;\r\n\r\n    getCurrentUsername = () => this.users().doc(this.userID()).get();\r\n\r\n\r\n    // Posts API\r\n\r\n    // TODO limit posts retrieved and add infinite scrolling\r\n    loadPosts = (category) => this.db.collection(\"posts\")\r\n        .where(\"category\", \"==\", category).orderBy(\"time\", \"desc\").get();\r\n\r\n    loadMyPosts = () => this.db.collection(\"posts\")\r\n        .where(\"poster\", \"==\", this.auth.currentUser.uid)\r\n        .orderBy(\"time\", \"desc\").get();\r\n\r\n    newPost = (category, textBody, fileUrl) => this.db.collection(\"posts\").add({\r\n        text: textBody,\r\n        time: app.firestore.FieldValue.serverTimestamp(),\r\n        poster: this.auth.currentUser.uid,\r\n        yes: 0,\r\n        no: 0,\r\n        category: category,\r\n        image: fileUrl\r\n    });\r\n\r\n    likePost = (post, yesOrNo) => this.db.collection(\"posts\").doc(post).update({\r\n        [yesOrNo]: app.firestore.FieldValue.increment(1),\r\n        voters: app.firestore.FieldValue.arrayUnion(this.auth.currentUser.uid)\r\n    });\r\n\r\n    // TODO limit comments loaded and add capability to load more\r\n    loadComments = (post) => this.db.collection(\"posts\").doc(post).collection(\"comments\")\r\n        .orderBy(\"time\", \"asc\").get();\r\n\r\n    makeNewComment = (text, post) => this.db.collection(\"posts\").doc(post)\r\n        .collection(\"comments\").add({\r\n            no: 0,\r\n            poster: this.auth.currentUser.uid,\r\n            text: text,\r\n            time: app.firestore.FieldValue.serverTimestamp(),\r\n            yes: 0\r\n        });\r\n\r\n    getCommentPoster = (poster) => this.db.collection(\"users\").doc(poster).get();\r\n\r\n    // File Upload API\r\n    uploadPostImg = (file) => {\r\n        const storageRef = this.storage.ref();\r\n        const newRef = storageRef.child(`postImgs/${file.name}`);\r\n        return newRef.put(file)\r\n    };\r\n\r\n    getUploadURL = (file) => {\r\n        const imageRef = this.storage.ref().child(`postImgs/${file.name}`);\r\n        return imageRef.getDownloadURL();\r\n    }\r\n\r\n    // OTHER STUFF\r\n\r\n    currentTime = () => app.firestore.FieldValue.serverTimestamp();\r\n\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from './Context';\r\nimport Firebase from './Firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase }","import moment from \"moment\";\r\nimport React, {Component} from \"react\";\r\nimport {withFirebase} from \"./Firebase\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\n\r\n\r\nclass Post extends Component {\r\n    static defaultProps = {\r\n        text: '',\r\n        id: '',\r\n        yes: 0,\r\n        no: 0,\r\n        time: new Date(),\r\n        category: '',\r\n        poster: '',\r\n        voters: [],\r\n        authUser: null\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: [],\r\n            showComments: false,\r\n            showVotesBar: false,\r\n            yesPercent: 50,\r\n            noPercent: 50,\r\n            yes: 0,\r\n            no: 0\r\n        };\r\n\r\n        this.toggleComments = this.toggleComments.bind(this);\r\n        this.loadComments = this.loadComments.bind(this);\r\n        this.goToSignIn = this.goToSignIn.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.authUser && this.props.voters && this.props.voters.indexOf(this.props.firebase.userID()) !== -1) {\r\n            const yesPer = Math.ceil((this.props.yes / (this.props.yes + this.props.no)) * 100);\r\n            // User has already voted; show the progress bar\r\n            this.setState({\r\n                showVotesBar: true,\r\n                yesPercent: yesPer,\r\n                noPercent: 100 - yesPer,\r\n                yes: this.props.yes,\r\n                no: this.props.no\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    static ago(time) {\r\n        let difference = moment(time.toDate()).diff(moment());\r\n        return moment.duration(difference).humanize();\r\n    }\r\n\r\n    toggleComments() {\r\n        this.setState((prevState) => ({\r\n            showComments: !prevState.showComments\r\n        }))\r\n    }\r\n\r\n    loadComments() {\r\n        const tempComments = [];\r\n        this.props.firebase.loadComments(this.props.id)\r\n            .then((comments) => {\r\n                comments.forEach((comment) => {\r\n                    const tempComm = comment.data();\r\n                    tempComm.id = comment.id;\r\n                    tempComments.push(tempComm);\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    showComments: true,\r\n                    comments: tempComments\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    // triggered when a post is clicked\r\n    clickPost(isYes) {\r\n        if (this.props.authUser) {\r\n            let like = isYes ? \"yes\" : \"no\";\r\n            const yesCount = this.props.yes + (isYes ? 1 : 0);\r\n            const noCount = this.props.no + (isYes ? 0 : 1);\r\n\r\n            const yesPer = Math.ceil((yesCount / (yesCount + noCount)) * 100);\r\n            this.props.firebase.likePost(this.props.id, like)\r\n                .then((res) => {\r\n                    this.setState({\r\n                        showVotesBar: true,\r\n                        yesPercent: yesPer,\r\n                        noPercent: 100 - yesPer,\r\n                        yes: this.props.yes + (isYes ? 1 : 0),\r\n                        no: this.props.no + (isYes ? 0 : 1)\r\n                    })\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            this.goToSignIn();\r\n        }\r\n    }\r\n\r\n    goToSignIn() {\r\n        this.props.history.push(ROUTES.SIGN_IN);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"postContent\">\r\n                <div className=\"Post\">\r\n                    {this.props.image && this.props.image !== \"\" && (\r\n                        <div className=\"postImageContainer\">\r\n                            <img src={this.props.image}  alt={this.props.image} className=\"postImage\"/>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"postText\">{this.props.text}</div>\r\n                    {\r\n                        this.state.showVotesBar ?\r\n                            <div className=\"postButtonsBox\">\r\n                                <div className=\"votingBar\">\r\n                                    <span className=\"colBar greenBar\"\r\n                                          style={{width: this.state.yesPercent.toString(10) + '%'}}>\r\n                                        <div style={{paddingBottom: '5px'}}>{this.state.yes}</div>\r\n                                        </span>\r\n                                    <span className=\"colBar redBar\"\r\n                                          style={{width: this.state.noPercent.toString(10) + '%'}}>{this.state.no}</span>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className=\"postButtonsBox\">\r\n                                <input type=\"image\" src=\"yee.png\" alt=\"Lit\" width=\"10%\" height=\"10%\"\r\n                                       className=\"clickOpacity\" onClick={() => this.clickPost(true)}/>\r\n                                <span\r\n                                    style={{flexBasis: '100px', textAlign: 'center', color: 'darkgray'}}>   or   </span>\r\n                                <input type=\"image\" src=\"nah.png\" alt=\"Lame\" width=\"10%\" height=\"10%\"\r\n                                       className=\"clickOpacity\" onClick={() => this.clickPost(false)}/>\r\n                            </div>\r\n                    }\r\n                    <PosterUsername firebase={this.props.firebase} poster={this.props.poster} classN=\"postPoster\"/>\r\n                    <div className=\"time\">{Post.ago(this.props.time)} ago</div>\r\n\r\n                </div>\r\n                <div className=\"commentsBox\">\r\n                    {\r\n                        this.state.showComments ?\r\n                            <CommentsBox comments={this.state.comments} postID={this.props.id}\r\n                                         firebase={this.props.firebase} toggleComm={this.toggleComments}\r\n                                         reloadComments={this.loadComments} authUser={this.props.authUser}\r\n                                         goToSignIn={this.goToSignIn}/>\r\n                            : <div className=\"showCommentsButton\" onClick={this.loadComments}>Show Comments</div>\r\n\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nclass CommentsBox extends Component {\r\n    static defaultProps = {\r\n        comments: [],\r\n        // comment props: no: number, yes: number, text: string, time: timestamp, poster: string\r\n        postID: '',\r\n        firebase: null,\r\n        toggleComm() {\r\n        },\r\n        reloadComments() {\r\n        },\r\n        authUser: null,\r\n        goToSignIn() {\r\n        },\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            commentText: ''\r\n        }\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({commentText: event.target.value});\r\n    };\r\n\r\n    onPostComment = (event) => {\r\n        event.preventDefault();\r\n        const {commentText} = this.state;\r\n\r\n        if (this.props.authUser) {\r\n\r\n            this.props.firebase.makeNewComment(commentText, this.props.postID)\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    this.setState({\r\n                        commentText: ''\r\n                    })\r\n                })\r\n                .then(() => {\r\n                    this.props.reloadComments();\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                })\r\n        } else {\r\n            this.props.goToSignIn();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {commentText} = this.state;\r\n\r\n        const isInvalid = (commentText === '');\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"comments\">\r\n                    {this.props.comments.map((comment) => (\r\n                        <div className=\"comment\" key={comment.id}>\r\n                            <span>{comment.text}</span>\r\n                            <PosterUsername firebase={this.props.firebase} poster={comment.poster} classN=\"commentPoster\"/>\r\n                            <div className=\"commentTime\">{Post.ago(comment.time)} ago</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n\r\n                <form onSubmit={this.onPostComment} className=\"newCommentForm\">\r\n                    <input\r\n                        name=\"username\"\r\n                        className=\"newCommentBox\"\r\n                        value={commentText}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"new comment...\"\r\n                    />\r\n                    <button disabled={isInvalid} type=\"submit\" className=\"newCommentButton\">\r\n                        send\r\n                    </button>\r\n                </form>\r\n                <div className=\"hideCommentsButton\" onClick={() => this.props.toggleComm()}>Hide Comments</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass PosterUsername extends Component {\r\n    static defaultProps = {\r\n        poster: '',\r\n        firebase: null,\r\n        classN: ''\r\n    };\r\n    state = {\r\n        username: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.firebase.getCommentPoster(this.props.poster)\r\n            .then((user) => {\r\n                let u = user.data().username;\r\n                this.setState({\r\n                    username: u\r\n                })\r\n            }).catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { username } = this.state;\r\n        return (\r\n            <div className={this.props.classN}>\r\n                Posted by {username}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(withFirebase(Post));\r\n","import React, {Component} from 'react';\r\nimport '../styles/Feed.css';\r\n\r\nimport Post from './Post';\r\n\r\nclass Landing extends Component {\r\n\r\n    static defaultProps = {\r\n        onLoad() {},\r\n        posts: [],\r\n        category: '',\r\n        authUser: null\r\n    };\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            posts: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onLoad();\r\n    }\r\n\r\n    render() {\r\n        const feed = this.props.posts.length === 0 ? <div className=\"loading\">Loading...</div> : (\r\n        this.props.posts.map((post) => {\r\n            return <Post {...post} key={post.id} authUser={this.props.authUser} />\r\n        }));\r\n        let desc = '';\r\n        switch (this.props.category) {\r\n            case 'tastyorterrible': {\r\n                desc = \"Post your best food ideas and/or pictures we'll vote on whether we'd indulge or take a pass!\";\r\n                break;\r\n            }\r\n            case 'flyorfail': {\r\n                desc = \"Post your new/best outfit, and we'll vote on whether you'll be turning heads, for better or worse!\";\r\n                break;\r\n            }\r\n\r\n            case 'litorlame': {\r\n                desc = \"Post anything you want here and we'll vote on the fundamental question: is it lit, or is it lame?\";\r\n                break;\r\n            }\r\n            case 'funnyorflat': {\r\n                desc = \"Post your most humorous joke or situation and we'll vote on whether its funny or just falls flat\";\r\n                break;\r\n            }\r\n            case 'weirdorwonderful': {\r\n                desc = \"Post your craziest idea here and we'll vote on whether its the next big thing or just plain odd\";\r\n                break;\r\n            }\r\n            default: {\r\n                desc = '';\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <h1 className=\"feedTitle\">#{this.props.category}</h1>\r\n\r\n                <div className=\"postsContainer\">\r\n                    <p className=\"description\">{desc}</p>\r\n                    {feed}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n// class PostObj {\r\n//     constructor(public id: string, public text: string, public time: string,\r\n//     public yes: number, public no: number, public img?: string,) {}\r\n// }\r\n\r\n\r\nexport default Landing;\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"./Firebase\";\r\nimport * as ROUTES from '../constants/routes';\r\nimport '../styles/NewPostAndSigning.css';\r\n\r\nconst PasswordForgetPage = () => (\r\n    <div>\r\n        <PasswordForgetForm />\r\n    </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    error: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...INITIAL_STATE };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { email } = this.state;\r\n\r\n        this.props.firebase\r\n            .doPasswordReset(email)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE });\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ error });\r\n            })\r\n    };\r\n\r\n    onChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { email, error } = this.state;\r\n\r\n        const isInvalid = (email === '');\r\n\r\n        return (\r\n            <div className=\"modalContainer\">\r\n                <form onSubmit={this.onSubmit} className=\"modal\">\r\n                    <h1 className=\"modalTitle\">Password Forget</h1>\r\n                    <input\r\n                        name=\"email\"\r\n                        className=\"formInput\"\r\n                        value={this.state.email}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"Email Address\"\r\n                    />\r\n                    {error && <div className=\"errorMessage\">{error.message}</div>}\r\n                    <button disabled={isInvalid} type=\"submit\" className=\"submitButton\">\r\n                        Reset My Password\r\n                    </button>\r\n                </form>\r\n                <Link to={ROUTES.SIGN_IN} style={{textDecoration: 'none', margin: '5px'}}><span role=\"img\" aria-label=\"back\" className=\"goBack\">⬅️ go back</span></Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n    <p>\r\n        forgot password? <Link to={ROUTES.PASSWORD_FORGET}>reset it here</Link>\r\n    </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport { compose } from 'recompose'\r\n\r\nimport { SignUpLink } from \"./SignUp\";\r\nimport { PasswordForgetLink } from \"./PasswordForget\";\r\nimport { withFirebase } from \"./Firebase\";\r\nimport * as ROUTES from '../constants/routes';\r\nimport '../styles/NewPostAndSigning.css';\r\n\r\n\r\nconst SignInPage = () => {\r\n    return (\r\n        <div>\r\n            <SignInForm />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst  INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { ...INITIAL_STATE };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { email, password } = this.state;\r\n\r\n        this.props.firebase\r\n            .doSignInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                this.setState({ ...INITIAL_STATE});\r\n                this.props.history.push(ROUTES.LANDING);\r\n            })\r\n            .catch((error) => {\r\n                this.setState({ error });\r\n            });\r\n    };\r\n\r\n    onChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { email, password, error } = this.state;\r\n\r\n        const isInvalid = password === '' || email === '' || password.length < 6;\r\n\r\n        return (\r\n            <div className=\"modalContainer\">\r\n                <form onSubmit={this.onSubmit} className=\"modal\" >\r\n                    <h1 className=\"modalTitle\">sign in</h1>\r\n                    <input\r\n                        name=\"email\"\r\n                        className=\"formInput\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"Email Address\"\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        className=\"formInput\"\r\n                        value={password}\r\n                        onChange={this.onChange}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                    {error && <div className=\"errorMessage\">{error.message}</div>}\r\n                    <button disabled={isInvalid} type=\"submit\" className=\"submitButton\">\r\n                        sign in\r\n                    </button>\r\n                </form>\r\n                <SignUpLink />\r\n                <PasswordForgetLink />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignInLink = () => (\r\n    <p>\r\n        have an account? <Link to={ROUTES.SIGN_IN}>sign in</Link>\r\n    </p>\r\n);\r\n\r\nconst SignInForm = compose(\r\n    withRouter,\r\n    withFirebase\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm, SignInLink };\r\n","import React, {Component} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {compose} from 'recompose';\r\nimport { SignInLink } from \"./SignIn\";\r\n\r\nimport {withFirebase} from './Firebase';\r\nimport * as ROUTES from '../constants/routes';\r\nimport '../styles/NewPostAndSigning.css';\r\n\r\n\r\nconst SignUpPage = () => {\r\n    return (\r\n        <div>\r\n            <SignUpForm/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...INITIAL_STATE};\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onSubmit = event => {\r\n        event.preventDefault();\r\n        const {username, email, passwordOne} = this.state;\r\n\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then((authUser) => {\r\n                // create a new user in Cloud Firestore\r\n                return this.props.firebase\r\n                    .user(authUser.user.uid)\r\n                    .set({\r\n                        username,\r\n                        email\r\n                    });\r\n            })\r\n            .then(() => {\r\n                this.setState({...INITIAL_STATE});\r\n                this.props.history.push(ROUTES.LANDING);\r\n            })\r\n            .catch(error => {\r\n                this.setState({error});\r\n            });\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error\r\n        } = this.state;\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            passwordOne.length < 6 ||\r\n            email === '' ||\r\n            username === '';\r\n\r\n        return (\r\n            <div className=\"modalContainer\">\r\n                <form onSubmit={this.onSubmit} className=\"modal\">\r\n                    <h1 className=\"modalTitle\">sign up</h1>\r\n                    <input\r\n                        name=\"username\"\r\n                        className=\"formInput\"\r\n                        value={username}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"username\"\r\n                    />\r\n                    <input\r\n                        name=\"email\"\r\n                        className=\"formInput\"\r\n                        value={email}\r\n                        onChange={this.onChange}\r\n                        type=\"text\"\r\n                        placeholder=\"email address\"\r\n                    />\r\n                    <input\r\n                        name=\"passwordOne\"\r\n                        className=\"formInput\"\r\n                        value={passwordOne}\r\n                        onChange={this.onChange}\r\n                        type=\"password\"\r\n                        placeholder=\"password\"\r\n                    />\r\n                    <input\r\n                        name=\"passwordTwo\"\r\n                        className=\"formInput\"\r\n                        value={passwordTwo}\r\n                        onChange={this.onChange}\r\n                        type=\"password\"\r\n                        placeholder=\"confirm Password\"\r\n                    />\r\n                    {error && <div className=\"errorMessage\">{error.message}</div>}\r\n                    <button disabled={isInvalid} type=\"submit\" className=\"submitButton\">\r\n                        sign up\r\n                    </button>\r\n                </form>\r\n                <SignInLink />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n    <p>\r\n        don't have an account? <Link to={ROUTES.SIGN_UP}>sign up</Link>\r\n    </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport {SignUpForm, SignUpLink}\r\n","import React, {Component} from 'react';\r\n\r\nimport {withFirebase} from \"./Firebase\";\r\nimport '../styles/Account.css';\r\n\r\nconst INITIAL_STATE = {\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...INITIAL_STATE};\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        const {passwordOne} = this.state;\r\n\r\n        this.props.firebase\r\n            .doPasswordUpdate(passwordOne)\r\n            .then(() => {\r\n                this.setState({...INITIAL_STATE});\r\n            })\r\n            .catch((error) => {\r\n                this.setState({error});\r\n            });\r\n    };\r\n\r\n    onChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n\r\n    render() {\r\n        const {passwordOne, passwordTwo, error} = this.state;\r\n\r\n        const isInvalid = (\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            passwordOne.length < 6\r\n        );\r\n        return (\r\n            <form onSubmit={this.onSubmit} className=\"passwordChangeForm\">\r\n                <h3>change your password</h3>\r\n                <input\r\n                    name=\"passwordOne\"\r\n                    value={passwordOne}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"New Password\"\r\n                    className=\"passwordForgetBox\"\r\n                />\r\n\r\n                <input\r\n                    name=\"passwordTwo\"\r\n                    value={passwordTwo}\r\n                    onChange={this.onChange}\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm New Password\"\r\n                    className=\"passwordForgetBox\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\" className=\"appButton\">\r\n                    Reset My Password\r\n                </button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = (condition) => Component => {\r\n    class WithAuthorization extends React.Component {\r\n        componentDidMount() {\r\n            this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n                authUser => {\r\n                    if (!condition(authUser)) {\r\n                        this.props.history.push(ROUTES.SIGN_IN);\r\n                    }\r\n                },\r\n            );\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            this.listener();\r\n        }\r\n\r\n        render() {\r\n            return (\r\n                <Component {...this.props} />\r\n            );\r\n        }\r\n    }\r\n\r\n    return compose(\r\n        withRouter,\r\n        withFirebase,\r\n    )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React, { Component } from 'react';\r\n\r\nimport PasswordChangeForm from './PasswordChange';\r\nimport  withAuthorization  from './Session/withAuthorization';\r\nimport { withFirebase } from \"./Firebase\";\r\nimport Post from './Post';\r\nimport '../styles/Account.css';\r\n\r\nclass AccountPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            myPosts: [],\r\n            username: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const tempPosts = [];\r\n        this.props.firebase.loadMyPosts()\r\n            .then((posts)=> {\r\n                posts.forEach((post) => {\r\n                    const tempDat = post.data();\r\n                    tempDat.id = post.id;\r\n                    tempPosts.push(tempDat);\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    myPosts: tempPosts\r\n                })\r\n                this.props.firebase.getCurrentUsername()\r\n                    .then(res => {\r\n                        this.setState({username: res.data().username})\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"page\">\r\n                <h2>my account</h2>\r\n                <h5>logged in as {this.state.username}</h5>\r\n                <PasswordChangeForm/>\r\n                {this.state.myPosts.length > 0 ?\r\n                    <MyPostList myPosts={this.state.myPosts} authUser={this.props.authUser}/>\r\n                    :\r\n                    <p>posts you make will appear here</p>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst MyPostList = (props) => (\r\n    <div>\r\n        <h2>My Posts</h2>\r\n        {props.myPosts.map((post) => (\r\n            <Post {...post} key={post.id} authUser={props.authUser}/>\r\n        ))}\r\n    </div>\r\n);\r\n\r\nconst condition = (authUser) => authUser != null;\r\n\r\nexport default withFirebase(withAuthorization(condition)(AccountPage));\r\n","import React, { Component } from 'react';\r\n\r\nimport { withFirebase } from \"./Firebase\";\r\n\r\nimport * as ROLES from '../constants/roles';\r\n\r\nclass AdminPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n            users: {}\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n\r\n        this.props.firebase.users().on('value', (snapshot) => {\r\n            this.setState({\r\n                users: snapshot.val(),\r\n                loading: false\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                .\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nconst condition = (authUser) => authUser && !!authUser.roles[ROLES.ADMIN];\r\n\r\nexport default (AdminPage);\r\n","import React from 'react';\r\n\r\nimport { withFirebase } from \"./Firebase\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as ROUTES from '../constants/routes';\r\nimport '../styles/NewPostAndSigning.css';\r\n\r\n\r\n\r\nconst SignOutButton = (props) => {\r\n    return (\r\n        <button type=\"button\" className=\"signOutButton\" onClick={() => {\r\n            props.history.push(ROUTES.LANDING);\r\n            window.location.reload();\r\n            props.firebase.doSignOut();\r\n        }}>\r\n            Sign Out\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default withRouter(withFirebase(SignOutButton));\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport SignOutButton from './SignOut';\r\n\r\nimport '../styles/Footer.css'\r\n\r\nimport * as ROUTES from '../constants/routes';\r\nimport {withFirebase} from \"./Firebase\";\r\n\r\nconst Footer = (props) => (\r\n    <div>\r\n        {props.authUser ? <FooterAuth firebase={props.firebase}/> : <FooterNonAuth/>}\r\n        <div className=\"bottomRight\">\r\n            <img src=\"litorlamelogo.png\" alt=\"logo\" width=\"50%\" height=\"50%\"/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nclass FooterAuth extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            searchBarText: '',\r\n            username: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.firebase.getCurrentUsername()\r\n            .then(res => {\r\n                this.setState({\r\n                    username: res.data().username\r\n                })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({searchBarText: event.target.value});\r\n    };\r\n\r\n    onSearch = (event) => {\r\n        // search functionality\r\n        event.preventDefault();\r\n        this.setState({searchBarText: ''});\r\n        console.log(this.state.searchBarText);\r\n    };\r\n\r\n    render() {\r\n        const {searchBarText} = this.state;\r\n\r\n        return (\r\n            <div className=\"bottomLeft\">\r\n                <div className=\"footerLink\">\r\n                    <label><span role=\"img\" aria-label=\"plus emoji\">➕</span></label>\r\n                    <span><Link to={ROUTES.NEW_POST}>add a new post</Link></span> <br/>\r\n                </div>\r\n\r\n                <div className=\"footerLink\">\r\n                    <form onSubmit={this.onSearch}>\r\n                    <label htmlFor='footer-searchBar'>\r\n                        <span role=\"img\" aria-label=\"search emoji\" style={{cursor: 'pointer'}} onClick={this.onSearch}>🔍</span>\r\n                    </label>\r\n                    <input\r\n                        id='searchBar'\r\n                        name='footer-searchBar'\r\n                        type='text'\r\n                        size={30}\r\n                        autoComplete='off'\r\n                        value={searchBarText}\r\n                        onChange={this.onChange}/>\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className=\"footerLink\">\r\n                    <label><span role=\"img\" aria-label=\"person emoji\">👤</span></label>\r\n                    <span>logged in as <Link to={ROUTES.ACCOUNT}\r\n                                             style={{textDecoration: 'underline'}}>{this.state.username}</Link></span><br/>\r\n                </div>\r\n\r\n                <div className=\"footerLink\">\r\n                    <label><span role=\"img\" aria-label=\"computer screen emoji\">📺</span></label>\r\n                    <span><Link to={ROUTES.ACCOUNT}>see your posts</Link></span>\r\n                </div>\r\n\r\n                <span className=\"footerLink\">\r\n                    <label><span role=\"img\" aria-label=\"door emoji\">🚪</span></label>\r\n                    <SignOutButton/>\r\n                </span>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst FooterNonAuth = () => (\r\n    <div>\r\n        <div className=\"bottomLeft\">\r\n\r\n            <label><span role=\"img\" aria-label=\"\">👤</span></label>\r\n            <span><Link to={ROUTES.SIGN_IN}>log in to make a post</Link></span><br/>\r\n\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default withFirebase(Footer);\r\n","import {Link, withRouter} from 'react-router-dom';\r\nimport React, {Component} from 'react';\r\nimport {compose} from 'recompose';\r\n\r\nimport  withAuthorization  from './Session/withAuthorization';\r\nimport {withFirebase} from \"./Firebase\";\r\nimport * as ROUTES from '../constants/routes';\r\nimport '../styles/NewPostAndSigning.css';\r\n\r\nconst NewPostPage = (props) => {\r\n    return (\r\n        <div>\r\n            <NewPostForm category={props.category} sub={props.onSub}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n    text: '',\r\n    uploading: false,\r\n    image: null,\r\n    fileTooLarge: null,\r\n    filePath: null,\r\n    submitted: false\r\n};\r\n\r\nclass NewPostFormBase extends Component {\r\n\r\n    static defaultProps = {\r\n        category: '',\r\n        onSub() {\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...INITIAL_STATE};\r\n\r\n        this.onAddImage = this.onAddImage.bind(this);\r\n        this.removeImage = this.removeImage.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onAddImage(event) {\r\n        event.preventDefault();\r\n        let file = event.target.files[0];\r\n        if (file.size > 500000) {\r\n            this.setState({\r\n                fileTooLarge: `${file.name} is too large, please pick a smaller file`\r\n            });\r\n            event.target.value = null;\r\n        } else {\r\n            this.setState({\r\n                uploading: true,\r\n                fileTooLarge: null,\r\n                filePath: file\r\n            });\r\n            let reader = new FileReader();\r\n\r\n            reader.onload = (e) => {\r\n                this.setState({\r\n                    uploading: false,\r\n                    image: e.target.result\r\n                })\r\n            };\r\n            reader.readAsDataURL(file);\r\n\r\n            // this.props.firebase.uploadPostImg(file)\r\n            //     .then((snapshot) => {\r\n            //         console.log(snapshot);\r\n            //         this.setState({\r\n            //                 uploading: false,\r\n            //                 image: file\r\n            //             }\r\n            //         )\r\n            //     })\r\n            //     .catch((err) => {\r\n            //         console.log(err);\r\n            //     })\r\n        }\r\n\r\n    }\r\n\r\n    removeImage() {\r\n        this.setState({\r\n            image: null,\r\n            filePath: null\r\n        })\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            submitted: true\r\n        })\r\n        const { text, filePath } = this.state;\r\n        if (filePath) {\r\n            this.props.firebase.uploadPostImg(filePath)\r\n                .then(snapshot => {\r\n                    this.props.firebase.getUploadURL(filePath)\r\n                        .then(url => {\r\n                            console.log(url);\r\n                            this.makeNewPost(text, url);\r\n                        })\r\n                        .catch(err => console.log(err))\r\n                })\r\n                .catch(err => console.log(err))\r\n        } else {\r\n            this.makeNewPost(text, \"\");\r\n        }\r\n    };\r\n\r\n    makeNewPost(text, imgUrl) {\r\n        this.props.firebase.newPost(this.props.category, text, imgUrl)\r\n            .then(doc => {\r\n                this.setState({...INITIAL_STATE});\r\n                this.props.sub(this.props.category);\r\n                this.props.history.push(ROUTES.LANDING);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    onChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    };\r\n\r\n\r\n    render() {\r\n        const { text, uploading, image, submitted } = this.state;\r\n\r\n        const isInvalid = text === '' || text.length > 250 || submitted;\r\n\r\n        const imgUpload = () => {\r\n            switch (true) {\r\n                case uploading:\r\n                    return <Spinner/>;\r\n                case image !== null:\r\n                    return <Image image={image} removeImage={this.removeImage}/>;\r\n                default:\r\n                    return <input type=\"file\" id=\"imgUpload\" onChange={this.onAddImage} className=\"submitButton\"\r\n                                  style={{marginTop: '-5px'}}/>\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className=\"modalContainer\">\r\n                <form onSubmit={this.onSubmit} className=\"modal\">\r\n                    <h1>new post</h1>\r\n                    {imgUpload()}\r\n                    {this.state.fileTooLarge && this.state.fileTooLarge}\r\n                    <textarea\r\n                        name=\"text\"\r\n                        value={text}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"250 character limit...\"\r\n                    />\r\n                    <label className=\"characterLimit\">{250 - this.state.text.length} characters left</label>\r\n                    <button disabled={isInvalid} type=\"submit\" className=\"submitButton\">\r\n                        post\r\n                    </button>\r\n                </form>\r\n                <Link to={ROUTES.LANDING} style={{textDecoration: 'none', margin: '5px'}}><span role=\"img\"\r\n                                                                                                aria-label=\"back\"\r\n                                                                                                className=\"goBack\">⬅️ go back</span></Link>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst Spinner = () => (\r\n    <div className=\"spinner fadeIn\">\r\n        <img src=\"spinner.png\" alt=\"Uploading...\"/>\r\n    </div>\r\n);\r\n\r\nconst Image = (props) => (\r\n    <div className=\"fadeIn imageContainer\">\r\n        <div onClick={() => props.removeImage()} className=\"deleteButton\">X</div>\r\n        <img src={props.image} alt='' style={{maxWidth: '180px', height: '130px'}}/>\r\n    </div>\r\n);\r\n\r\nconst NewPostForm = compose(\r\n    withRouter,\r\n    withFirebase\r\n)(NewPostFormBase);\r\n\r\nconst condition = (authUser) => authUser != null;\r\n\r\nexport default withAuthorization(condition)(NewPostPage);\r\n","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport * as ROUTES from '../constants/routes';\r\n\r\nconst Lost = () => {\r\n    return (\r\n        <div style={{display: 'flex', justifyContent: 'center', paddingTop: '10px'}}>\r\n            <h1 style={{width: '50%', textAlign: 'center'}}>Hmmm, we're not sure we know what you're looking for.<br /><br />  Head on back to the home page <Link to={ROUTES.LANDING}>here</Link></h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Lost;\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport './styles/App.css';\r\n\r\nimport Navigation from './components/Navigation';\r\nimport LandingPage from './components/Landing';\r\nimport SignUpPage from './components/SignUp';\r\nimport SignInPage from './components/SignIn';\r\nimport PasswordForgetPage from './components/PasswordForget';\r\nimport AccountPage from './components/Account';\r\nimport AdminPage from './components/Admin';\r\nimport Footer from './components/Footer';\r\nimport NewPostPage from './components/NewPost';\r\nimport LostPage from './components/Lost';\r\n\r\nimport * as ROUTES from './constants/routes';\r\nimport {withFirebase} from \"./components/Firebase\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            authUser: null,\r\n            category: 'litorlame',\r\n            posts: []\r\n        };\r\n        this.changeCategory = this.changeCategory.bind(this);\r\n        this.loadPosts = this.loadPosts.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n            (authUser) => {\r\n                authUser\r\n                    ? this.setState({authUser})\r\n                    : this.setState({authUser: null});\r\n            }\r\n        );\r\n\r\n        this.loadPosts(this.state.category);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.listener();\r\n    }\r\n\r\n\r\n    changeCategory(category) {\r\n        if (category !== this.state.category) {\r\n            this.setState({category, posts: []});\r\n            this.loadPosts(category);\r\n        }\r\n    }\r\n\r\n    loadPosts(category) {\r\n        const tempPosts = [];\r\n        this.props.firebase.loadPosts(category)\r\n            .then((posts) => {\r\n                posts.forEach((post) => {\r\n                    const tempDat = post.data();\r\n                    tempDat.id = post.id;\r\n                    tempPosts.push(tempDat);\r\n                })\r\n            })\r\n            .then(() => {\r\n                this.setState({\r\n                    posts: tempPosts\r\n                })\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div>\r\n                    <Navigation changeCat={this.changeCategory}/>\r\n                    <Switch>\r\n                        <Route exact path={ROUTES.LANDING} render={() => (\r\n                            <LandingPage posts={this.state.posts} category={this.state.category}\r\n                                         authUser={this.state.authUser}/>\r\n                        )}/>\r\n                        <Route exact path={ROUTES.SIGN_UP} component={SignUpPage}/>\r\n                        <Route exact path={ROUTES.SIGN_IN} component={SignInPage}/>\r\n                        <Route exact path={ROUTES.PASSWORD_FORGET} component={PasswordForgetPage}/>\r\n                        <Route exact path={ROUTES.ACCOUNT} render={() => (\r\n                            <AccountPage authUser={this.state.authUser} />\r\n                        )}/>\r\n                        <Route exact path={ROUTES.ADMIN} component={AdminPage}/>\r\n                        <Route exact path={ROUTES.NEW_POST} render={() => (\r\n                            <NewPostPage onSub={this.loadPosts} category={this.state.category} />\r\n                        )} />\r\n                         <Route component={LostPage} />\r\n                    </Switch>\r\n                </div>\r\n                <Footer authUser={this.state.authUser}/>\r\n            </Router>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withFirebase(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/Firebase';\n\nReactDOM.render(\n    <FirebaseContext.Provider value={new Firebase()}>\n        <App/>\n    </FirebaseContext.Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}